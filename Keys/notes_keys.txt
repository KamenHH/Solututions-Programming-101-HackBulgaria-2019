наподобява mapreduce

get_input():
Чете ключ-стойност двойка от стандартния вход, 
раделени със шпация.
Създава списък (pair) чиите първи елемент е ключа, 
а втори - стойността му. Ако дължината на списъка е по-голяма
от 2 -> невалидни входни данни.
..няма проверка за клюа..
проверяваме дали стойността е цяло число и > 0, if true: append
else: discard
Връща списък с ненаредене двойки ключ-стойност.

reduce():
Създава речник, от резултата върноaт от get_input..
Функцията редуцира данните като 'уникализира' всеки ключ.
Ако ключът е в списъка, добавя към сегашанта му стойност поредната.
Ако не е в списъка, добавя ключа със поредната му стойност.

get_top3():
Връща от речника треите ключа, чиито стойности са най-големи.
.items() създава списък от наредени двойки ключ-стойнст
подреждаме елементите в списка според стойността на двойката (k,v)

output_builder():
Според това кои елементи са равни, връща различния елемент,
ако има такъв, нов списък с другите два елемента и спец, име.
Ако А = Б и Б != С, то А != С !!!
no_equal - True само ако няма нито един равен елемент на друг

_print_output():
Изкарва резултатът на стандартния изход.
diff_pair - двойката, която не е равна на останалите две if any
ако стойността на diff_pair е по-голяма от тази на другите две двойки
пъто принтира diff_pair
else: обратното

no_equal - True само ако няма нито един равен елемент на друг
тогава принтира всяка двойка на отделен ред

ако 'няма' diff_pair -> всички стойностина елементите са равни
принтира всички на един ден, с обща стойност (на пътвия елемент)
